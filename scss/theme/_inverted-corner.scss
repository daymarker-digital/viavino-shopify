@use 'sass:color';
@use 'sass:map';
@use '../utils/variables' as *;
@use '../utils/mixins/breakpoint' as *;

.inverted-corner {

  position: relative;
  display: inline-flex;


  img, svg {
    display: block;
    width: 100%;
    height: auto;
  }

  &__content {
    width: 100%;
    z-index: 1;
    display: flex;
    justify-content: center;
    align-items: center;
    a, button {
      width: 100%;
      height: 100%;
    }
  }

  &__button,
  &__feature {
    transition: opacity var(--theme-transition--duration);
    position: relative;
    display: block;
    height: auto;
    opacity: 1;
    width: 100%;
  }


  &--button,
  &--feature {
    width: 100%;
    .inverted-corner__content {
      position: absolute;
      top: 0;
      left: 0;
      height: 100%;
    }
  }

  @each $name, $value in $theme-colours {

    &--background-#{$name} {
      svg {
        transition: fill var(--theme-transition--duration);
        fill: $value;
      }
      &.inverted-corner--button:hover {
        svg {
          fill: color.scale( $value, $lightness: -15% );
        }
      }
    }

    &--border-#{$name} {
      img, svg {
        filter: drop-shadow( 0 calc(-1*var(--theme-border-width)) 0 $value )
          drop-shadow( var(--theme-border-width) 0 0 $value )
          drop-shadow( 0 var(--theme-border-width) 0 $value )
          drop-shadow( calc(-1*var(--theme-border-width)) 0 0 $value );
      }
    }

  }

  @include breakpoint(sm) {

    &--button {
      max-width: 350px;
    }

  }

  @include breakpoint(md) {

    &--button {
      max-width: 400px;
    }

  }

  @include breakpoint(lg) {

    &--button {
      max-width: 450px;
    }

  }

  @include breakpoint(xl) {}

  @include breakpoint(xxl) {}

}
